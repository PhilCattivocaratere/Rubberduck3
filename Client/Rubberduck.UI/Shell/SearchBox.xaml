<UserControl x:Class="Rubberduck.UI.Shell.SearchBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Rubberduck.UI.Shell" 
             xmlns:converters="clr-namespace:Rubberduck.UI.Converters" 
             mc:Ignorable="d" 
             d:DesignHeight="20" d:DesignWidth="180">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Rubberduck.UI;component/Styles/DefaultStyle.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Rubberduck.UI;component/Styles/Templates.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <TextBox Text="{Binding Path=Text, ElementName=Root, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 x:Name="ValueContainer" 
                 Background="{DynamicResource ThemeBackgroundColorBrush}" 
                 Foreground="{DynamicResource ThemeTextColorBrush}"
                 Panel.ZIndex="2" 
                 VerticalContentAlignment="Center"
                 MinWidth="180"
                 Width="Auto"
                 Grid.Row="0" Grid.Column="0">
            <TextBox.InputBindings>
                <KeyBinding Command="{Binding Path=ClearSearchCommand}" Key="Esc"/>
            </TextBox.InputBindings>
        </TextBox>
        <!-- this is the actual hint container, it's BELOW the displaying control -->
        <TextBox Text="{Binding Path=Hint, ElementName=Root, Mode=OneWay}" 
                 Background="{Binding Path=Background, ElementName=Root}" 
                 Width="{Binding Path=ActualWidth, ElementName=ValueContainer}"
                 Height="{Binding Path=ActualHeight, ElementName=ValueContainer}"
                 Panel.ZIndex="1" IsTabStop="False" IsReadOnly="True"
                 VerticalContentAlignment="Center"
                 Grid.Row="0" Grid.Column="0">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <!-- Setter needs to be within this type to be overwritable with a trigger -->
                    <Setter Property="Foreground" Value="Transparent" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Text, Source={x:Reference ValueContainer}}" Value="">
                            <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <local:FlatButton Grid.Column="1" Icon="{DynamicResource SearchIcon}"
                          Command="{Binding ClearSearchCommand}">
            <local:FlatButton.Style>
                <Style TargetType="local:FlatButton" BasedOn="{StaticResource FlatButtonStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, ElementName=ValueContainer, Converter={StaticResource HasItemsBoolConverter}}" Value="True">
                            <Setter Property="Icon" Value="{DynamicResource XMarkIcon}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </local:FlatButton.Style>
        </local:FlatButton>
    </Grid>
</UserControl>

<ToggleButton x:Class="Rubberduck.UI.Shell.FlatToggleButton"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:local="clr-namespace:Rubberduck.UI.Shell"
              x:Name="FlatToggleButtonRoot"
              mc:Ignorable="d" Padding="4"
              MinHeight="16" MinWidth="16"
              BorderThickness="0" Margin="1,0">
    <ToggleButton.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Rubberduck.UI;component/Styles/DefaultStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ControlTemplate x:Key="FlatToggleButtonTemplate" TargetType="ToggleButton">
                <Canvas Background="Transparent">
                    <Image x:Name="CanvasIcon"
                           Source="{Binding IconSource, RelativeSource={RelativeSource AncestorType=local:FlatToggleButton, Mode=FindAncestor, AncestorLevel=1}}"
                           Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Stretch="Uniform"
                           HorizontalAlignment="Center" VerticalAlignment="Center" />

                    <Rectangle Fill="{TemplateBinding Foreground}"
                               Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Stretch="Uniform"
                               Canvas.Left="{TemplateBinding local:FlatToggleButton.OffsetX}"
                               HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Fill" Value="{Binding HoverBrush, RelativeSource={RelativeSource AncestorType=local:FlatToggleButton, Mode=FindAncestor}}" />
                                            <Setter Property="Cursor" Value="Hand" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Fill" Value="{Binding HighlightBrush, RelativeSource={RelativeSource AncestorType=local:FlatToggleButton, Mode=FindAncestor}}" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton, Mode=FindAncestor}}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Fill" Value="{Binding HighlightBrush, RelativeSource={RelativeSource AncestorType=local:FlatToggleButton, Mode=FindAncestor}}" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                        <Rectangle.OpacityMask>
                            <ImageBrush Stretch="Uniform" ImageSource="{Binding Source, ElementName=CanvasIcon}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Canvas>
                <ControlTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{DynamicResource ThemeWhiteMediumColorBrush}" />
                            <Setter Property="Foreground" Value="{Binding HoverBrush, RelativeSource={RelativeSource Mode=Self}}" />
                            <Setter Property="Cursor" Value="Hand" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Foreground" Value="{Binding HighlightBrush, RelativeSource={RelativeSource Mode=Self}}" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Foreground" Value="{Binding HighlightBrush, RelativeSource={RelativeSource Mode=Self}}" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{DynamicResource ThemeBackgroundInactiveColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ThemeTextInactiveColorBrush}" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </ToggleButton.Resources>
    <ToggleButton.Style>
        <Style TargetType="ToggleButton">
            <Setter Property="Template" Value="{DynamicResource FlatToggleButtonTemplate}" />
            <Setter Property="Background" Value="{DynamicResource ThemeBackgroundColorBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource ThemeWhiteDarkColorBrush}" />
            <Setter Property="Height" Value="16" />
            <Setter Property="Width" Value="16" />
            <Setter Property="local:FlatToggleButton.HighlightBrush" Value="{DynamicResource ThemeAccent1DarkColorBrush}" />
            <Setter Property="local:FlatToggleButton.HoverBrush" Value="{DynamicResource ThemeAccent1LightColorBrush}" />
        </Style>
    </ToggleButton.Style>
</ToggleButton>
